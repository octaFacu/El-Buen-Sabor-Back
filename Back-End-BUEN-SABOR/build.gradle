/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "org.springframework.boot" version "3.0.6"

}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.5'
    api 'org.springframework.boot:spring-boot-starter-web:3.0.5'
    api 'org.projectlombok:lombok:1.18.26'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    api 'org.hibernate.orm:hibernate-core:6.1.7.Final'
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.32'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.5'
    implementation files('src/main/resources/library/genericos.jar')

    implementation 'ch.qos.logback:logback-classic:1.2.6'
    implementation group: 'com.mercadopago', name: 'sdk-java', version: '2.1.14'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-websocket
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '3.0.5'
    implementation group: 'org.glassfish.tyrus.bundles', name: 'tyrus-standalone-client', version: '1.13.1'
    // compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'
    implementation group: 'org.springframework', name: 'spring-messaging', version: '6.0.11'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'

}

tasks.jar{
    enabled = false
}

bootJar{
    enabled = true
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'demo'
java.sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
